plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-rc3'
    id("xyz.jpenilla.run-paper") version '2.3.1'
}

group = 'dev.cheezboi9'
version = '2.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")

    // Adventure APIs (MiniMessage and core)
    compileOnly("net.kyori:adventure-api:4.14.0")
    compileOnly("net.kyori:adventure-text-minimessage:4.14.0")

    implementation platform("org.mongodb:mongodb-driver-bom:5.5.1")
    implementation 'org.mongodb:mongodb-driver-sync'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

import org.gradle.api.file.DuplicatesStrategy

shadowJar {
    archiveClassifier.set('all') // your fat-jar

    // if any duplicates slip through, drop them
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // drop all GraalVM native-image metadata
    exclude 'META-INF/native-image/**'

    // existing relocations
    relocate 'org.bson',    'dev.cheezboi9.farmfix.libs.org.bson'
    relocate 'com.mongodb', 'dev.cheezboi9.farmfix.libs.com.mongodb'
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21")
    }
}
